---
- name: Create ServiceAccount
  k8s_v1_service_account:
    name: "{{ APPLICATION_NAME }}"
    namespace: "{{ namespace }}"
    state: present

# TODO: NOT Allowed
# fatal: [localhost]: FAILED! => {"changed": false, "error": 403, "msg": "Failed to retrieve requested object: rolebindings.rbac.authorization.k8s.io \"elasticsearch-view\" is forbidden: User \"system:serviceaccount:localregistry-es-apb-prov-gz4nr:apb-212696fc-664f-44b6-b0b1-db04966e2be8\" cannot get rolebindings.rbac.authorization.k8s.io in the namespace \"ek-apb\": User \"system:serviceaccount:localregistry-es-apb-prov-gz4nr:apb-212696fc-664f-44b6-b0b1-db04966e2be8\" cannot get rolebindings.rbac.authorization.k8s.io in project \"ek-apb\""}
#
# After setting in broker-config sandbox_role: "admin"
#
#TASK [provision-es-apb : Create RoleBinding] ***********************************
# fatal: [localhost]: FAILED! => {"changed": false, "error": 500, "msg": "Failed to create object: unsupported role reference kind: {\"rbac.authorization.k8s.io\" \"\"}"}
# 	to retry, use: --limit @/opt/apb/actions/provision.retry
#
# - name: Create RoleBinding
#   k8s_v1beta1_role_binding:
#     name: "{{ APPLICATION_NAME }}-view"
#     namespace: "{{ namespace }}"
#     state: present
#     role_ref_name: view
#     subjects:
#     - kind: ServiceAccount
#       name: "{{ APPLICATION_NAME }}"
#       namespace: "{{ namespace }}"

- name: Create API service
  k8s_v1_service:
    name: "{{ APPLICATION_NAME }}"
    namespace: "{{ namespace }}"
    state: present
    selector:
      app: "{{ APPLICATION_NAME }}"
    ports:
      - name: restapi
        port: 9200
        target_port: 9200

- name: Create Cluster service
  k8s_v1_service:
    name: "{{ APPLICATION_NAME }}-cluster"
    namespace: "{{ namespace }}"
    state: present
    selector:
      app: "{{ APPLICATION_NAME }}"
    ports:
      - name: cluster
        port: 9300
        target_port: 9300

# - name: Create Route
#   openshift_v1_route:
#     name: "{{ APPLICATION_NAME }}"
#     namespace: "{{ namespace }}"
#     state: present
#     spec_to_kind: Service
#     spec_to_name: "{{ APPLICATION_NAME }}"
#     port_target_port: restapi

- name: Process ConfigMap from template
  template:
    src: elasticsearch-configmap.yml.j2
    dest: "/tmp/elasticsearch-configmap.yml"
  register: cm

- name: Create ConfigMap
  k8s_v1_config_map:
    name: "{{ APPLICATION_NAME }}"
    namespace: "{{ namespace}}"
    state: present
    src: "{{ cm.dest | default(cm.path) }}"

- name: Process StatefulSet from template
  template:
    src: elasticsearch-statefulset.yml.j2
    dest: "/tmp/elasticsearch-statefulset.yml"
  register: statefulset

- name: Create StatefulSet
  k8s_v1beta1_stateful_set:
    name: "{{ APPLICATION_NAME }}"
    namespace: "{{ namespace}}"
    state: present
    src: "{{ statefulset.dest | default(statefulset.path) }}"

##############################################################################
## Bindable services must make credentials available to the Ansible Service
## Broker during the provision stage.  They will later be made available to
## applications after a binding is created.
## https://github.com/kubernetes-incubator/service-catalog/blob/master/docs/design.md#using-a-service-instance
##############################################################################
- name: encode bind credentials
  asb_encode_binding:
    fields:
      ELASTICSEARCH_URL: 'http://{{ APPLICATION_NAME }}:9200'
